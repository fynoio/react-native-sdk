{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["import { NativeModules } from \"react-native\";\n\nconst { FynoReactNative } = NativeModules;\n\nconsole.log(\"FynoReactNative in index.js =>\", FynoReactNative);\n\nfunction initialise(workspaceId, integrationID, userId, version) {\n  return new Promise((resolve, reject) => {\n    try {\n      FynoReactNative.initialise(\n        workspaceId,\n        integrationID,\n        userId,\n        version || \"live\"\n      );\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nfunction registerPush(\n  xiaomiApplicationId,\n  xiaomiApplicationKey,\n  pushRegion,\n  provider\n) {\n  return new Promise((resolve, reject) => {\n    try {\n      FynoReactNative.registerPush(\n        xiaomiApplicationId,\n        xiaomiApplicationKey,\n        pushRegion || \"INDIA\",\n        provider\n      );\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nfunction identifyUser(uniqueID, userName) {\n  return new Promise((resolve, reject) => {\n    try {\n      FynoReactNative.identify(uniqueID, userName);\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nfunction mergeProfile(oldDistinctId, newDistinctId) {\n  return new Promise((resolve, reject) => {\n    try {\n      FynoReactNative.mergeProfile(oldDistinctId, newDistinctId);\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nfunction updateStatus(callBackUrl, status) {\n  return new Promise((resolve, reject) => {\n    try {\n      FynoReactNative.updateStatus(callBackUrl, status);\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nfunction resetUser() {\n  return new Promise((resolve, reject) => {\n    try {\n      FynoReactNative.resetUser();\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nexport default FynoRN = {\n  initialise,\n  registerPush,\n  identifyUser,\n  mergeProfile,\n  updateStatus,\n  resetUser,\n};\n\nmodule.exports = {\n  initialise,\n  registerPush,\n  identifyUser,\n  mergeProfile,\n  updateStatus,\n  resetUser,\n};\n"],"names":["FynoReactNative","NativeModules","initialise","workspaceId","integrationID","userId","version","Promise","resolve","reject","err","registerPush","xiaomiApplicationId","xiaomiApplicationKey","pushRegion","provider","identifyUser","uniqueID","userName","identify","mergeProfile","oldDistinctId","newDistinctId","updateStatus","callBackUrl","status","resetUser","console","log","FynoRN","module","exports"],"mappings":"yRAEA,MAAQA,gBAAoBC,0BAApBD,mBAIR,SAASE,WAAWC,EAAaC,EAAeC,EAAQC,GACtD,OAAO,IAAIC,QAAQ,CAACC,EAASC,KAC3B,IACET,gBAAgBE,WACdC,EACAC,EACAC,EACAC,GAAW,QAEbE,IACA,MAAOE,GACPD,EAAOC,CAAG,GAEb,CACH,CAEA,SAASC,aACPC,EACAC,EACAC,EACAC,GAEA,OAAO,IAAIR,QAAQ,CAACC,EAASC,KAC3B,IACET,gBAAgBW,aACdC,EACAC,EACAC,GAAc,QACdC,GAEFP,IACA,MAAOE,GACPD,EAAOC,CAAG,GAEb,CACH,CAEA,SAASM,aAAaC,EAAUC,GAC9B,OAAO,IAAIX,QAAQ,CAACC,EAASC,KAC3B,IACET,gBAAgBmB,SAASF,EAAUC,CAAQ,EAC3CV,IACA,MAAOE,GACPD,EAAOC,CAAG,GAEb,CACH,CAEA,SAASU,aAAaC,EAAeC,GACnC,OAAO,IAAIf,QAAQ,CAACC,EAASC,KAC3B,IACET,gBAAgBoB,aAAaC,EAAeC,CAAa,EACzDd,IACA,MAAOE,GACPD,EAAOC,CAAG,GAEb,CACH,CAEA,SAASa,aAAaC,EAAaC,GACjC,OAAO,IAAIlB,QAAQ,CAACC,EAASC,KAC3B,IACET,gBAAgBuB,aAAaC,EAAaC,CAAM,EAChDjB,IACA,MAAOE,GACPD,EAAOC,CAAG,GAEb,CACH,CAEA,SAASgB,YACP,OAAO,IAAInB,QAAQ,CAACC,EAASC,KAC3B,IACET,gBAAgB0B,YAChBlB,IACA,MAAOE,GACPD,EAAOC,CAAG,GAEb,CACH,CAjFAiB,QAAQC,IAAI,iCAAkC5B,eAAe,EAmF7D,UAAe6B,OAAS,CACtB3B,WAAAA,WACAS,aAAAA,aACAK,aAAAA,aACAI,aAAAA,aACAG,aAAAA,aACAG,UAAAA,SACF,EAEAI,OAAOC,QAAU,CACf7B,WAAAA,WACAS,aAAAA,aACAK,aAAAA,aACAI,aAAAA,aACAG,aAAAA,aACAG,UAAAA,SACF"}