{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["import { NativeModules } from \"react-native\";\n\nconst { FynoReactNative } = NativeModules;\n\nconsole.log(\"FynoReactNative in index.js =>\", FynoReactNative);\n\nfunction initialise(workspaceId, token, userId, version) {\n  return new Promise((resolve, reject) => {\n    try {\n      FynoReactNative.initialise(workspaceId, token, userId, version || \"live\");\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nfunction registerPush(\n  xiaomiApplicationId,\n  xiaomiApplicationKey,\n  pushRegion,\n  integrationId,\n  provider\n) {\n  return new Promise((resolve, reject) => {\n    try {\n      FynoReactNative.registerPush(\n        xiaomiApplicationId,\n        xiaomiApplicationKey,\n        pushRegion || \"INDIA\",\n        integrationId,\n        provider\n      );\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nfunction identifyUser(uniqueID, userName) {\n  return new Promise((resolve, reject) => {\n    try {\n      FynoReactNative.identify(uniqueID, userName);\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nfunction mergeProfile(oldDistinctId, newDistinctId) {\n  return new Promise((resolve, reject) => {\n    try {\n      FynoReactNative.mergeProfile(oldDistinctId, newDistinctId);\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nfunction updateStatus(callBackUrl, status) {\n  return new Promise((resolve, reject) => {\n    try {\n      FynoReactNative.updateStatus(callBackUrl, status);\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nfunction resetUser() {\n  return new Promise((resolve, reject) => {\n    try {\n      FynoReactNative.resetUser();\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nexport default FynoRN = {\n  initialise,\n  registerPush,\n  identifyUser,\n  mergeProfile,\n  updateStatus,\n  resetUser,\n};\n\nmodule.exports = {\n  initialise,\n  registerPush,\n  identifyUser,\n  mergeProfile,\n  updateStatus,\n  resetUser,\n};\n"],"names":["FynoReactNative","NativeModules","initialise","workspaceId","token","userId","version","Promise","resolve","reject","err","registerPush","xiaomiApplicationId","xiaomiApplicationKey","pushRegion","integrationId","provider","identifyUser","uniqueID","userName","identify","mergeProfile","oldDistinctId","newDistinctId","updateStatus","callBackUrl","status","resetUser","console","log","FynoRN","module","exports"],"mappings":"yRAEA,MAAQA,gBAAoBC,0BAApBD,mBAIR,SAASE,WAAWC,EAAaC,EAAOC,EAAQC,GAC9C,OAAO,IAAIC,QAAQ,CAACC,EAASC,KAC3B,IACET,gBAAgBE,WAAWC,EAAaC,EAAOC,EAAQC,GAAW,MAAM,EACxEE,IACA,MAAOE,GACPD,EAAOC,CAAG,GAEb,CACH,CAEA,SAASC,aACPC,EACAC,EACAC,EACAC,EACAC,GAEA,OAAO,IAAIT,QAAQ,CAACC,EAASC,KAC3B,IACET,gBAAgBW,aACdC,EACAC,EACAC,GAAc,QACdC,EACAC,GAEFR,IACA,MAAOE,GACPD,EAAOC,CAAG,GAEb,CACH,CAEA,SAASO,aAAaC,EAAUC,GAC9B,OAAO,IAAIZ,QAAQ,CAACC,EAASC,KAC3B,IACET,gBAAgBoB,SAASF,EAAUC,CAAQ,EAC3CX,IACA,MAAOE,GACPD,EAAOC,CAAG,GAEb,CACH,CAEA,SAASW,aAAaC,EAAeC,GACnC,OAAO,IAAIhB,QAAQ,CAACC,EAASC,KAC3B,IACET,gBAAgBqB,aAAaC,EAAeC,CAAa,EACzDf,IACA,MAAOE,GACPD,EAAOC,CAAG,GAEb,CACH,CAEA,SAASc,aAAaC,EAAaC,GACjC,OAAO,IAAInB,QAAQ,CAACC,EAASC,KAC3B,IACET,gBAAgBwB,aAAaC,EAAaC,CAAM,EAChDlB,IACA,MAAOE,GACPD,EAAOC,CAAG,GAEb,CACH,CAEA,SAASiB,YACP,OAAO,IAAIpB,QAAQ,CAACC,EAASC,KAC3B,IACET,gBAAgB2B,YAChBnB,IACA,MAAOE,GACPD,EAAOC,CAAG,GAEb,CACH,CA9EAkB,QAAQC,IAAI,iCAAkC7B,eAAe,EAgF7D,UAAe8B,OAAS,CACtB5B,WAAAA,WACAS,aAAAA,aACAM,aAAAA,aACAI,aAAAA,aACAG,aAAAA,aACAG,UAAAA,SACF,EAEAI,OAAOC,QAAU,CACf9B,WAAAA,WACAS,aAAAA,aACAM,aAAAA,aACAI,aAAAA,aACAG,aAAAA,aACAG,UAAAA,SACF"}