Object.defineProperty(exports,"__esModule",{value:!0});var reactNative=require("react-native");let FynoReactNative=reactNative.NativeModules.FynoReactNative;function initialise(i,a,n,s){return new Promise((e,t)=>{try{var r="android"===reactNative.Platform.OS&&""===n?null:n;FynoReactNative.initialise(i,a,r,s||"live"),e()}catch(e){t(e)}})}function registerPush(r,i,a,n){return new Promise((e,t)=>{try{FynoReactNative.registerPush(r,i,a||"INDIA",n),e()}catch(e){t(e)}})}function identifyUser(r,i){return new Promise((e,t)=>{try{FynoReactNative.identify(r,i),e()}catch(e){t(e)}})}function registerInapp(r){return new Promise((e,t)=>{try{FynoReactNative.registerInapp(r),e()}catch(e){t(e)}})}function mergeProfile(r,i){return new Promise((e,t)=>{try{FynoReactNative.mergeProfile(r,i),e()}catch(e){t(e)}})}function updateStatus(r,i){return new Promise((e,t)=>{try{FynoReactNative.updateStatus(r,i),e()}catch(e){t(e)}})}function resetUser(){return new Promise((e,t)=>{try{FynoReactNative.resetUser(),e()}catch(e){t(e)}})}console.log("FynoReactNative in index.js =>",FynoReactNative);var index=FynoRN={initialise:initialise,registerPush:registerPush,identifyUser:identifyUser,mergeProfile:mergeProfile,updateStatus:updateStatus,resetUser:resetUser,registerInapp:registerInapp};module.exports={initialise:initialise,registerPush:registerPush,identifyUser:identifyUser,mergeProfile:mergeProfile,updateStatus:updateStatus,resetUser:resetUser,registerInapp:registerInapp},exports.default=index;
//# sourceMappingURL=index.js.map
